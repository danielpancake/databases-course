
-- IN [1]:
EXPLAIN ANALYSE
  SELECT * FROM customer WHERE name = 'John Doe';

-- OUT [1]:
-- Gather  (cost=1000.00..36522.29 rows=10 width=211) (actual time=120.323..128.476 rows=0 loops=1)
--   Workers Planned: 2
--   Workers Launched: 2
--   ->  Parallel Seq Scan on customer  (cost=0.00..35521.29 rows=4 width=211) (actual time=87.350..87.350 rows=0 loops=3)
--         Filter: (name = 'John Doe'::text)
--         Rows Removed by Filter: 333333
-- Planning Time: 1.525 ms
-- Execution Time: 128.501 ms


-- Using single-column b-tree index
-- IN [2]:
CREATE INDEX customer_name_idx ON customer (name); -- took 3 sec
EXPLAIN ANALYSE
  SELECT * FROM customer WHERE name = 'John Doe';

-- OUT [2]:
-- Bitmap Heap Scan on customer  (cost=4.50..44.08 rows=10 width=211) (actual time=0.068..0.069 rows=0 loops=1)
--   Recheck Cond: (name = 'John Doe'::text)
--   ->  Bitmap Index Scan on customer_name_idx  (cost=0.00..4.50 rows=10 width=0) (actual time=0.062..0.062 rows=0 loops=1)
--         Index Cond: (name = 'John Doe'::text)
-- Planning Time: 1.552 ms
-- Execution Time: 0.109 ms


-- Using hash index
-- IN [3]:
CREATE INDEX customer_name_hash_idx ON customer USING hash (name); -- took 3 sec
EXPLAIN ANALYSE
    SELECT * FROM customer WHERE name = 'John Doe';

-- OUT[3]:
-- Bitmap Heap Scan on customer  (cost=4.08..43.66 rows=10 width=211) (actual time=0.015..0.016 rows=0 loops=1)
--   Recheck Cond: (name = 'John Doe'::text)
--   ->  Bitmap Index Scan on customer_name_hash_idx  (cost=0.00..4.08 rows=10 width=0) (actual time=0.014..0.014 rows=0 loops=1)
--         Index Cond: (name = 'John Doe'::text)
-- Planning Time: 0.909 ms
-- Execution Time: 0.042 ms


-- As we can tell by planning and execution time, hash indexing gave better results in terms of time spent.
